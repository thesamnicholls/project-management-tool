{"version":3,"sources":["js/components/layout/SignedInLinks.tsx","js/store/actions/authActions.tsx","js/components/layout/SignedOutLinks.tsx","js/components/layout/Navigation.tsx","js/components/projects/ProjectSummary.tsx","js/components/Loading.tsx","js/components/Button.tsx","js/components/projects/ProjectList.tsx","js/components/dashboard/Notifications.tsx","js/components/dashboard/Dashboard.tsx","js/components/projects/ProjectDetails.tsx","js/components/auth/Input.tsx","js/components/auth/SignIn.tsx","js/components/auth/SignUp.tsx","js/components/auth/TextArea.tsx","js/components/projects/CreateProject.tsx","js/store/actions/projectActions.tsx","js/App.tsx","js/store/reducers/authReducer.tsx","js/store/reducers/projectReducer.tsx","js/store/reducers/rootReducer.tsx","js/config/fbConfig.tsx","index.tsx"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","title","onClick","SignedOutLinks","state","firebase","uid","ProjectSummary","description","id","key","Loading","Button","setVisible","prevState","ProjectList","projects","useState","visible","render","setRender","useEffect","timeout","setTimeout","clearTimeout","slice","map","post","body","length","Notifications","compose","firestoreConnect","firestore","ordered","match","params","data","project","content","authorFirstName","authorLastName","Input","label","onChange","htmlFor","authError","signIn","credentials","signInWithEmailAndPassword","email","password","catch","error","setPassword","setEmail","onSubmit","event","preventDefault","target","value","firstName","setFirstName","lastName","setLastName","console","log","TextArea","createProject","getFirestore","collection","add","authorId","createdAt","Date","setTitle","setContent","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","initialState","authReducer","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e093aaf.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props: any): JSX.Element => {\n  return (\n    <ul className='c-navigation__list'>\n      <li className='c-navigation__list-item'>\n        <NavLink\n          className='c-navigation__link'\n          to='/project-management-tool/create'\n          title='Click here to create a new project'\n        >\n          New Project\n        </NavLink>\n      </li>\n      <li className='c-navigation__list-item'>\n        <button\n          className='c-navigation__link'\n          onClick={props.signOut}\n          title='Click here to log out'\n        >\n          Log Out\n        </button>\n      </li>\n      <li className='c-navigation__list-item'>\n        <NavLink\n          className='c-navigation__circle'\n          to='/'\n          title='Click here to view your profile'\n        >\n          SN\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' })\n      })\n      .catch((error) => {\n        dispatch({ type: 'LOGIN_ERROR', error })\n      })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS'})\n      })\n  }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = (): JSX.Element => {\n  return (\n    <ul className='c-navigation__list'>\n      <li className='c-navigation__list-item'>\n        <NavLink className='c-navigation__link' to='/project-management-tool/signup' title='Click here to sign up'>\n          Sign Up\n        </NavLink>\n      </li>\n      <li className='c-navigation__list-item'>\n        <NavLink className='c-navigation__link' to='/project-management-tool/signin' title='Click here to log in'>\n          Log In\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navigation = (props: any): JSX.Element => {\n  // Descructuring auth from props\n  const { auth } = props\n\n  return (\n    <div className='c-navigation'>\n      <div className='c-navigation__wrapper'>\n        <Link\n          className='c-navigation__title'\n          to='/project-management-tool'\n          title='Click here to go home'\n        >\n          Project Management Tool\n        </Link>\n        {auth.uid ? <SignedInLinks /> : <SignedOutLinks />}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport interface ProjectSummaryProps {\n  id: number\n  title: string\n  description: string\n}\n\nconst ProjectSummary = ({ title, description, id }: ProjectSummaryProps) => {\n  return (\n    <Link className='c-link' to={'/project-management-tool/project/' + id}>\n      <div className='c-card' key={id}>\n        <p className='c-card__title'>{title}</p>\n        <p className='c-card__post'>{description}</p>\n        <p className='c-card__date'>3rd September, 2am</p>\n      </div>\n    </Link>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\n\nconst Loading = (): JSX.Element => {\n  return <div className='c-loading'></div>\n}\n\nexport default Loading\n","import React from 'react'\n\ntype ButtonProps = {\n  title: string\n  setVisible: React.Dispatch<React.SetStateAction<number>>\n}\n\nconst Button = ({ title, setVisible }: ButtonProps) => {\n  const loadMore = () => {\n    // Show 5 more cards then what the current amount of cards is\n    setVisible((prevState: number) => prevState + 5)\n  }\n\n  return (\n    <button className='c-button' onClick={loadMore} type='button'>\n      {title}\n    </button>\n  )\n}\n\nexport default Button\n","import React, { useState, useEffect } from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport Loading from '../Loading'\nimport Button from '../Button'\n\nexport interface ProjectListProps {\n  projects: any\n}\n\nconst ProjectList = ({ projects }: ProjectListProps) => {\n  const [visible, setVisible] = useState(5)\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    // Delay the useEffect by 1000ms\n    const timeout = setTimeout(() => {\n      // Set the render state to true\n      setRender(true)\n    }, 1000)\n    // Clear the timer when it's done\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return (\n    <div className='l-grid'>\n      {render ? (\n        <div>\n          <div className='o-row'>\n            <div className='l-grid'>\n              {projects.slice(0, visible).map((post) => (\n                <ProjectSummary\n                  key={post.id}\n                  id={post.id}\n                  title={post.title}\n                  description={post.body}\n                />\n              ))}\n            </div>\n          </div>\n          <div className='o-row'>\n            {visible < projects.length && (\n              <Button title='Load More' setVisible={setVisible} />\n            )}\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\n\nconst Notifications = (): JSX.Element => {\n  return (\n    <div className='c-notification'>\n      <p className='c-notification'>Notifications</p>\n    </div>\n  )\n}\n\nexport default Notifications\n","import React from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nconst Dashboard = (props: any): JSX.Element => {\n  // Descructuring auth from props\n  const { projects, auth } = props\n\n  // If the user is logged in then redirect back to the sign in page\n  if (!auth.uid) {\n    return <Redirect to='/project-management-tool/signin' />\n  }\n\n  // If the user is not logged in then show the dashboard\n  return (\n    <div className='l-dashboard'>\n      <div className='l-dashboard__wrapper--card'>\n        <ProjectList projects={projects} />\n      </div>\n      <div className='l-dashboard__wrapper--notification'>\n        <Notifications />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n  }\n}\nexport default compose<any>(\n  firestoreConnect(['projects']),\n  connect(mapStateToProps),\n)(Dashboard)\n","import React from 'react'\nimport Loading from '../Loading'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nconst ProjectDetails = (props: any): JSX.Element => {\n  const { project } = props\n  const auth = props.auth\n\n  if (project) {\n    if (!auth.uid) {\n      return <Redirect to='/project-management-tool/signin' />\n    }\n    return (\n      <div className='c-detail'>\n        <div className='c-detail__wrapper'>\n          <p className='c-detail__title'>{project.title}</p>\n          <p className='c-detail__description'>{project.content}</p>\n        </div>\n        <div className='c-detail__footer'>\n          <p className='c-detail__post'>\n            Posted By {project.authorFirstName} {project.authorLastName}\n          </p>\n          <p className='c-detail__date'>2nd September, 2am</p>\n        </div>\n      </div>\n    )\n  } else {\n    return <Loading />\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const id = props.match.params.id\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  }\n}\nexport default compose<any>(\n  firestoreConnect(['projects']),\n  connect(mapStateToProps),\n)(ProjectDetails)\n","import React from 'react'\n\nexport interface InputProps {\n  label: string\n  id: string\n  type: string\n  onChange: (event: any) => void\n}\n\nconst Input = ({ label, id, type, onChange }: InputProps) => {\n  return (\n    <div className='c-input'>\n      <label className='c-input__label' htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className='c-input__input'\n        onChange={onChange}\n        type={type}\n        id={id}\n      />\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\nimport Input from './Input'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nconst SignIn = (props: any): JSX.Element => {\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n\n  // Creating a new object which stores the password and email state\n  const credentials = { password: password, email: email }\n  // Descructuring authError and auth from props\n  const { authError, auth } = props\n\n  const handleEmailChange = (event: any) => {\n    // Setting the email state to be the value the user enters in the email input\n    setEmail(event.target.value)\n  }\n\n  const handlePasswordChange = (event: any) => {\n    // Setting the password state to be the value the user enters in the password input\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = (event: any) => {\n    // Stops the page from refreshing\n    event.preventDefault()\n    // Passing the credientials object to the signIn function\n    props.signIn(credentials)\n  }\n\n  // If the user is logged in then redirect back to the dashboard\n  if (auth.uid) {\n    return <Redirect to='/project-management-tool' />\n  }\n\n  // If the user is not logged in then show the sign in form\n  return (\n    <form onSubmit={handleSubmit} className='c-form'>\n      <p className='c-form__title'>Sign In</p>\n      <Input\n        label='Email'\n        id='email'\n        type='email'\n        onChange={handleEmailChange}\n      />\n      <Input\n        label='Password'\n        id='password'\n        type='password'\n        onChange={handlePasswordChange}\n      />\n      {authError && <p className='c-form__error'>{authError}</p>}\n      <div className='c-form__button'>\n        <button className='c-button' type='submit' title='Click here to login'>\n          Login\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    signIn: (credentials: any) => dispatch(signIn(credentials)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { useState } from 'react'\nimport Input from './Input'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst SignUp = (props: any): JSX.Element => {\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n\n  // Descructuring auth from props\n  const { auth } = props\n\n  const handleEmailChange = (event: any) => {\n    // Setting the email state to be the value the user enters in the email input\n    setEmail(event.target.value)\n  }\n\n  const handlePasswordChange = (event: any) => {\n    // Setting the password state to be the value the user enters in the password input\n    setPassword(event.target.value)\n  }\n\n  const handleFirstNameChange = (event: any) => {\n    // Setting the firstName state to be the value the user enters in the firstName input\n    setFirstName(event.target.value)\n  }\n\n  const handleLastNameChange = (event: any) => {\n    // Setting the lastName state to be the value the user enters in the lastName input\n    setLastName(event.target.value)\n  }\n\n  const handleSubmit = (event: any) => {\n    // Stops the page from refreshing\n    event.preventDefault()\n    console.log(\n      'password ' + password,\n      'email ' + email,\n      'firstName ' + firstName,\n      'lastName ' + lastName,\n    )\n  }\n\n  // If the user is logged in then redirect back to the dashboard\n  if (auth.uid) {\n    return <Redirect to='/project-management-tool' />\n  }\n\n  // If the user is not logged in then show the sign up form\n  return (\n    <form onSubmit={handleSubmit} className='c-form'>\n      <p className='c-form__title'>Sign Up</p>\n      <Input\n        label='Email'\n        id='email'\n        type='email'\n        onChange={handleEmailChange}\n      />\n      <Input\n        label='Password'\n        id='password'\n        type='password'\n        onChange={handlePasswordChange}\n      />\n      <Input\n        label='First Name'\n        id='firstName'\n        type='text'\n        onChange={handleFirstNameChange}\n      />\n      <Input\n        label='Last Name'\n        id='lastName'\n        type='text'\n        onChange={handleLastNameChange}\n      />\n      <div className='c-form__button'>\n        <button\n          className='c-button'\n          type='submit'\n          title='Click here to sign up'\n        >\n          Sign Up\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\n\nexport default connect(mapStateToProps)(SignUp)\n","import React from 'react'\n\nexport interface InputProps {\n  label: string\n  id: string\n  onChange: (event: any) => void\n}\n\nconst TextArea = ({ label, id, onChange }: InputProps) => {\n  return (\n    <div className='c-input'>\n      <label className='c-input__label' htmlFor={id}>\n        {label}\n      </label>\n      <textarea className='c-input__area' onChange={onChange} id={id} />\n    </div>\n  )\n}\n\nexport default TextArea\n","import React, { useState } from 'react'\nimport Input from '../auth/Input'\nimport TextArea from '../auth/TextArea'\nimport { createProject } from '../../store/actions/projectActions'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst CreateProject = (props): JSX.Element => {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n\n  const auth = props.auth\n\n  // Creating a project object which has the title and content state\n  const project = {\n    title,\n    content,\n  }\n\n  // Setting the title state to whatever the user enters in the input\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n\n  // Setting the content state to whatever the user enters in the input\n  const handleContentChange = (event) => {\n    setContent(event.target.value)\n  }\n\n  // When the user submits the form we fire the createProject dispatch\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    props.createProject(project)\n  }\n\n  if (!auth.uid) {\n    return <Redirect to='/project-management-tool/signin' />\n  }\n  return (\n    <form onSubmit={handleSubmit} className='c-form'>\n      <p className='c-form__title'>Create Project</p>\n      <Input\n        label='Title'\n        id='title'\n        type='text'\n        onChange={handleTitleChange}\n      />\n      <TextArea label='Content' id='content' onChange={handleContentChange} />\n      <div className='c-form__button'>\n        <button className='c-button' title='Click here to create a project'>\n          Create Project\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    createProject: (project: any) => dispatch(createProject(project)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, { getFirestore }) => {\n    const firestore = getFirestore()\n    firestore\n      .collection('projects')\n      .add({\n        ...project,\n        authorFirstName: 'First Name',\n        authorLastName: 'Last Name',\n        authorId: 12345,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({\n          type: 'CREATE_PROJECT',\n          project,\n        })\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'CREATE_PROJECT_ERROR',\n          error,\n        })\n      })\n  }\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navigation from './components/layout/Navigation'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className='o-main'>\n        <div className='o-row'>\n          <Switch>\n            <Route\n              exact\n              path='/project-management-tool'\n              component={Dashboard}\n            />\n            <Route\n              exact\n              path='/project-management-tool/project/:id'\n              component={ProjectDetails}\n            />\n            <Route\n              exact\n              path='/project-management-tool/signin'\n              component={SignIn}\n            />\n            <Route\n              exact\n              path='/project-management-tool/signup'\n              component={SignUp}\n            />\n            <Route\n              exact\n              path='/project-management-tool/create'\n              component={CreateProject}\n            />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const initialState = {\n  authError: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('Login Failed')\n      return { ...state, authError: 'Login failed' }\n    case 'LOGIN_SUCCESS':\n      console.log('Login Sucess')\n      return {\n        ...state,\n        authError: null,\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('Signout Success')\n      return state\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","const initialState = {\n  projects: [],\n}\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('Created Project', action.project)\n      return state\n    case 'CREATE_PROJECT_ERROR':\n      console.log('Create Project Error', action.error)\n      return state\n    default:\n      return state\n  }\n}\n\nexport default projectReducer\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAPlR10BTdPAA3qrgf4BnbTEAUKsAOANBA',\n  authDomain: 'project-mangement-tool-ba94c.firebaseapp.com',\n  databaseURL: 'https://project-mangement-tool-ba94c.firebaseio.com',\n  projectId: 'project-mangement-tool-ba94c',\n  storageBucket: 'project-mangement-tool-ba94c.appspot.com',\n  messagingSenderId: '994840881165',\n  appId: '1:994840881165:web:172de820f28c7b7a250d44',\n  measurementId: 'G-34M7NN17JL',\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/app.scss'\nimport App from './js/App'\nimport rootReducer from './js/store/reducers/rootReducer'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './js/config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n  ),\n)\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}