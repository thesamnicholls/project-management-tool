{"version":3,"sources":["js/components/layout/SignedInLinks.tsx","js/store/actions/authActions.tsx","js/components/layout/SignedOutLinks.tsx","js/components/layout/Navigation.tsx","js/components/projects/ProjectSummary.tsx","js/components/Loading.tsx","js/components/Button.tsx","js/components/projects/ProjectList.tsx","js/components/dashboard/Dashboard.tsx","js/components/projects/ProjectDetails.tsx","js/components/auth/Input.tsx","js/components/auth/SignIn.tsx","js/components/auth/SignUp.tsx","js/components/auth/TextArea.tsx","js/components/projects/CreateProject.tsx","js/store/actions/projectActions.tsx","js/App.tsx","js/store/reducers/authReducer.tsx","js/store/reducers/projectReducer.tsx","js/store/reducers/rootReducer.tsx","js/config/fbConfig.tsx","index.tsx"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","title","onClick","profile","initals","SignedOutLinks","state","console","log","firebase","uid","ProjectSummary","id","authorFirstName","authorLastName","createdAt","key","toDate","toDateString","Loading","Button","setVisible","prevState","ProjectList","projects","useState","visible","render","setRender","useEffect","timeout","setTimeout","clearTimeout","slice","map","post","length","compose","firestoreConnect","firestore","ordered","match","params","data","project","content","Input","label","onChange","htmlFor","authError","signIn","credentials","signInWithEmailAndPassword","email","password","catch","error","setPassword","setEmail","onSubmit","event","preventDefault","target","value","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","collection","doc","user","set","firstName","lastName","setFirstName","setLastName","TextArea","createProject","authorId","add","Date","setTitle","setContent","history","push","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0156e095.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props: any): JSX.Element => {\n  return (\n    <ul className='c-navigation__list'>\n      <li className='c-navigation__list-item'>\n        <NavLink\n          className='c-navigation__link'\n          to='/project-management-tool/create'\n          title='Click here to create a new project'\n        >\n          New Project\n        </NavLink>\n      </li>\n      <li className='c-navigation__list-item'>\n        <button\n          className='c-navigation__link'\n          onClick={props.signOut}\n          title='Click here to log out'\n        >\n          Log Out\n        </button>\n      </li>\n      <li className='c-navigation__list-item'>\n        <NavLink\n          className='c-navigation__circle'\n          to='/'\n          title='Click here to view your profile'\n        >\n          {props.profile.initals}\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' })\n      })\n      .catch((error) => {\n        dispatch({ type: 'LOGIN_ERROR', error })\n      })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\n      })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((response) => {\n        return firestore\n          .collection('users')\n          .doc(response.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initals: newUser.firstName[0] + newUser.lastName[0],\n          })\n      })\n      .then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n      })\n      .catch((error) => {\n        dispatch({ type: 'SIGNUP_ERROR', error })\n      })\n  }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = (): JSX.Element => {\n  return (\n    <ul className='c-navigation__list'>\n      <li className='c-navigation__list-item'>\n        <NavLink className='c-navigation__link' to='/project-management-tool/signup' title='Click here to sign up'>\n          Sign Up\n        </NavLink>\n      </li>\n      <li className='c-navigation__list-item'>\n        <NavLink className='c-navigation__link' to='/project-management-tool/signin' title='Click here to log in'>\n          Log In\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navigation = (props: any): JSX.Element => {\n  // Descructuring auth and profile from props\n  const { auth, profile } = props\n\n  return (\n    <div className='c-navigation'>\n      <div className='c-navigation__wrapper'>\n        <Link\n          className='c-navigation__title'\n          to='/project-management-tool'\n          title='Click here to go home'\n        >\n          Project Management Tool\n        </Link>\n        {auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport interface ProjectSummaryProps {\n  id: number\n  title: string\n  authorFirstName: string\n  authorLastName: string\n  createdAt: any\n}\n\nconst ProjectSummary = ({\n  title,\n  id,\n  authorFirstName,\n  authorLastName,\n  createdAt,\n}: ProjectSummaryProps) => {\n  return (\n    <Link className='c-link' to={'/project-management-tool/project/' + id}>\n      <div className='c-card' key={id}>\n        <p className='c-card__title'>{title}</p>\n        <p className='c-card__author'>\n          Posted by {authorFirstName} {authorLastName}\n        </p>\n        <p className='c-card__date'>{createdAt.toDate().toDateString()}</p>\n      </div>\n    </Link>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\n\nconst Loading = (): JSX.Element => {\n  return <div className='c-loading'></div>\n}\n\nexport default Loading\n","import React from 'react'\n\ntype ButtonProps = {\n  title: string\n  setVisible: React.Dispatch<React.SetStateAction<number>>\n}\n\nconst Button = ({ title, setVisible }: ButtonProps) => {\n  const loadMore = () => {\n    // Show 5 more cards then what the current amount of cards is\n    setVisible((prevState: number) => prevState + 5)\n  }\n\n  return (\n    <button className='c-button' onClick={loadMore} type='button'>\n      {title}\n    </button>\n  )\n}\n\nexport default Button\n","import React, { useState, useEffect } from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport Loading from '../Loading'\nimport Button from '../Button'\n\nexport interface ProjectListProps {\n  projects: any\n}\n\nconst ProjectList = ({ projects }: ProjectListProps) => {\n  const [visible, setVisible] = useState(5)\n  const [render, setRender] = useState(false)\n\n  useEffect(() => {\n    // Delay the useEffect by 1000ms\n    const timeout = setTimeout(() => {\n      // Set the render state to true\n      setRender(true)\n    }, 1000)\n    // Clear the timer when it's done\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return (\n    <div className='l-grid'>\n      {render ? (\n        <div>\n          <div className='o-row'>\n            <div className='l-grid'>\n              {projects.slice(0, visible).map((post) => (\n                <ProjectSummary\n                  key={post.id}\n                  id={post.id}\n                  title={post.title}\n                  authorFirstName={post.authorFirstName}\n                  authorLastName={post.authorLastName}\n                  createdAt={post.createdAt}\n                />\n              ))}\n            </div>\n          </div>\n          <div className='o-row'>\n            {visible < projects.length && (\n              <Button title='Load More' setVisible={setVisible} />\n            )}\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nconst Dashboard = (props: any): JSX.Element => {\n  // Descructuring auth from props\n  const { projects, auth } = props\n\n  // If the user is logged in then redirect back to the sign in page\n  if (!auth.uid) {\n    return <Redirect to='/project-management-tool/signin' />\n  }\n\n  // If the user is not logged in then show the dashboard\n  return (\n    <div className='l-dashboard'>\n      <div className='l-dashboard__wrapper'>\n        <ProjectList projects={projects} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n  }\n}\nexport default compose<any>(\n  firestoreConnect(['projects']),\n  connect(mapStateToProps),\n)(Dashboard)\n","import React from 'react'\nimport Loading from '../Loading'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nconst ProjectDetails = (props: any): JSX.Element => {\n  const { project } = props\n  const auth = props.auth\n\n  if (project) {\n    if (!auth.uid) {\n      return <Redirect to='/project-management-tool/signin' />\n    }\n    return (\n      <div className='c-detail'>\n        <div className='c-detail__wrapper'>\n          <p className='c-detail__title'>{project.title}</p>\n          <p className='c-detail__description'>{project.content}</p>\n        </div>\n        <div className='c-detail__footer'>\n          <p className='c-detail__post'>\n            Posted By {project.authorFirstName} {project.authorLastName}\n          </p>\n          <p className='c-detail__date'>\n            {project.createdAt.toDate().toDateString()}\n          </p>\n        </div>\n      </div>\n    )\n  } else {\n    return <Loading />\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const id = props.match.params.id\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  }\n}\nexport default compose<any>(\n  firestoreConnect(['projects']),\n  connect(mapStateToProps),\n)(ProjectDetails)\n","import React from 'react'\n\nexport interface InputProps {\n  label: string\n  id: string\n  type: string\n  onChange: (event: any) => void\n}\n\nconst Input = ({ label, id, type, onChange }: InputProps) => {\n  return (\n    <div className='c-input'>\n      <label className='c-input__label' htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className='c-input__input'\n        onChange={onChange}\n        type={type}\n        id={id}\n      />\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\nimport Input from './Input'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nconst SignIn = (props: any): JSX.Element => {\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n\n  // Creating a new object which stores the password and email state\n  const credentials = { password: password, email: email }\n  // Descructuring authError and auth from props\n  const { authError, auth } = props\n\n  const handleEmailChange = (event: any) => {\n    // Setting the email state to be the value the user enters in the email input\n    setEmail(event.target.value)\n  }\n\n  const handlePasswordChange = (event: any) => {\n    // Setting the password state to be the value the user enters in the password input\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = (event: any) => {\n    // Stops the page from refreshing\n    event.preventDefault()\n    // Passing the credientials object to the signIn function\n    props.signIn(credentials)\n  }\n\n  // If the user is logged in then redirect back to the dashboard\n  if (auth.uid) {\n    return <Redirect to='/project-management-tool' />\n  }\n\n  // If the user is not logged in then show the sign in form\n  return (\n    <form onSubmit={handleSubmit} className='c-form'>\n      <p className='c-form__title'>Sign In</p>\n      <Input\n        label='Email'\n        id='email'\n        type='email'\n        onChange={handleEmailChange}\n      />\n      <Input\n        label='Password'\n        id='password'\n        type='password'\n        onChange={handlePasswordChange}\n      />\n      {authError && <p className='c-form__error'>{authError}</p>}\n      <div className='c-form__button'>\n        <button className='c-button' type='submit' title='Click here to login'>\n          Login\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    signIn: (credentials: any) => dispatch(signIn(credentials)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Input from './Input'\nimport { signUp } from '../../store/actions/authActions'\n\nconst SignUp = (props: any): JSX.Element => {\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n\n  // Creating a new object which stores the firstName, lastName, email and password state\n  const newUser = {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    password: password,\n  }\n  // Descructuring auth and authError from props\n  const { auth, authError } = props\n\n  const handleEmailChange = (event: any) => {\n    // Setting the email state to be the value the user enters in the email input\n    setEmail(event.target.value)\n  }\n\n  const handlePasswordChange = (event: any) => {\n    // Setting the password state to be the value the user enters in the password input\n    setPassword(event.target.value)\n  }\n\n  const handleFirstNameChange = (event: any) => {\n    // Setting the firstName state to be the value the user enters in the firstName input\n    setFirstName(event.target.value)\n  }\n\n  const handleLastNameChange = (event: any) => {\n    // Setting the lastName state to be the value the user enters in the lastName input\n    setLastName(event.target.value)\n  }\n\n  const handleSubmit = (event: any) => {\n    // Stops the page from refreshing\n    event.preventDefault()\n    props.signUp(newUser)\n    console.log(\n      'password ' + password,\n      'email ' + email,\n      'firstName ' + firstName,\n      'lastName ' + lastName,\n    )\n  }\n\n  // If the user is logged in then redirect back to the dashboard\n  if (auth.uid) {\n    return <Redirect to='/project-management-tool' />\n  }\n\n  // If the user is not logged in then show the sign up form\n  return (\n    <form onSubmit={handleSubmit} className='c-form'>\n      <p className='c-form__title'>Sign Up</p>\n      <Input\n        label='Email'\n        id='email'\n        type='email'\n        onChange={handleEmailChange}\n      />\n      <Input\n        label='Password'\n        id='password'\n        type='password'\n        onChange={handlePasswordChange}\n      />\n      <Input\n        label='First Name'\n        id='firstName'\n        type='text'\n        onChange={handleFirstNameChange}\n      />\n      <Input\n        label='Last Name'\n        id='lastName'\n        type='text'\n        onChange={handleLastNameChange}\n      />\n      {authError && <p className='c-form__error'>{authError}</p>}\n      <div className='c-form__button'>\n        <button\n          className='c-button'\n          type='submit'\n          title='Click here to sign up'\n        >\n          Sign Up\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    signUp: (newUser: any) => {\n      dispatch(signUp(newUser))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React from 'react'\n\nexport interface InputProps {\n  label: string\n  id: string\n  onChange: (event: any) => void\n}\n\nconst TextArea = ({ label, id, onChange }: InputProps) => {\n  return (\n    <div className='c-input'>\n      <label className='c-input__label' htmlFor={id}>\n        {label}\n      </label>\n      <textarea className='c-input__area' onChange={onChange} id={id} />\n    </div>\n  )\n}\n\nexport default TextArea\n","import React, { useState } from 'react'\nimport Input from '../auth/Input'\nimport TextArea from '../auth/TextArea'\nimport { createProject } from '../../store/actions/projectActions'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst CreateProject = (props): JSX.Element => {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n\n  const auth = props.auth\n\n  // Creating a project object which has the title and content state\n  const project = {\n    title,\n    content,\n  }\n\n  // Setting the title state to whatever the user enters in the input\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n\n  // Setting the content state to whatever the user enters in the input\n  const handleContentChange = (event) => {\n    setContent(event.target.value)\n  }\n\n  // When the user submits the form we fire the createProject dispatch\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    props.createProject(project)\n    props.history.push('/project-management-tool')\n  }\n\n  if (!auth.uid) {\n    return <Redirect to='/project-management-tool/signin' />\n  }\n  return (\n    <form onSubmit={handleSubmit} className='c-form'>\n      <p className='c-form__title'>Create Project</p>\n      <Input\n        label='Title'\n        id='title'\n        type='text'\n        onChange={handleTitleChange}\n      />\n      <TextArea label='Content' id='content' onChange={handleContentChange} />\n      <div className='c-form__button'>\n        <button className='c-button' title='Click here to create a project'>\n          Create Project\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    createProject: (project: any) => dispatch(createProject(project)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const profile = getState().firebase.profile\n    const authorId = getState().firebase.auth.uid\n    const firestore = getFirestore()\n    firestore\n      .collection('projects')\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({\n          type: 'CREATE_PROJECT',\n          project,\n        })\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'CREATE_PROJECT_ERROR',\n          error,\n        })\n      })\n  }\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navigation from './components/layout/Navigation'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className='o-main'>\n        <div className='o-row'>\n          <Switch>\n            <Route\n              exact\n              path='/project-management-tool'\n              component={Dashboard}\n            />\n            <Route\n              exact\n              path='/project-management-tool/project/:id'\n              component={ProjectDetails}\n            />\n            <Route\n              exact\n              path='/project-management-tool/signin'\n              component={SignIn}\n            />\n            <Route\n              exact\n              path='/project-management-tool/signup'\n              component={SignUp}\n            />\n            <Route\n              exact\n              path='/project-management-tool/create'\n              component={CreateProject}\n            />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const initialState = {\n  authError: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('Login Failed')\n      return { ...state, authError: 'Login failed' }\n    case 'LOGIN_SUCCESS':\n      console.log('Login Sucess')\n      return {\n        ...state,\n        authError: null,\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('Signout Success')\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log('Signup Success')\n      return {\n        ...state,\n        authError: null,\n      }\n    case 'SIGNUP_ERROR':\n      console.log('Signup Failed')\n      return { ...state, authError: action.error.message }\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","const initialState = {\n  projects: [],\n}\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('Created Project', action.project)\n      return state\n    case 'CREATE_PROJECT_ERROR':\n      console.log('Create Project Error', action.error)\n      return state\n    default:\n      return state\n  }\n}\n\nexport default projectReducer\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAPlR10BTdPAA3qrgf4BnbTEAUKsAOANBA',\n  authDomain: 'project-mangement-tool-ba94c.firebaseapp.com',\n  databaseURL: 'https://project-mangement-tool-ba94c.firebaseio.com',\n  projectId: 'project-mangement-tool-ba94c',\n  storageBucket: 'project-mangement-tool-ba94c.appspot.com',\n  messagingSenderId: '994840881165',\n  appId: '1:994840881165:web:172de820f28c7b7a250d44',\n  measurementId: 'G-34M7NN17JL',\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/app.scss'\nimport App from './js/App'\nimport rootReducer from './js/store/reducers/rootReducer'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './js/config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n  ),\n)\n\nconst config = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n}\n\nconst rrfProps = {\n  firebase,\n  config: config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}